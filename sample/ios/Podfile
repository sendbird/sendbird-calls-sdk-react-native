def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'SendbirdCallsRNSample' do
  config = use_native_modules!

  ## RNPermissions
  setup_permissions([
    'Camera',
    'Microphone',
  ])

  ## RNFirebase
  use_frameworks! :linkage => :static

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",

    # Temporary workaround: A SIGABRT occurs during iOS execution because the new architecture is not yet stabilized.
    :new_arch_enabled => false
  )

  post_install do |installer|
      # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
          react_native_post_install(
            installer,
            config[:reactNativePath],
            :mac_catalyst_enabled => false,
            # :ccache_enabled => true
          )
    # XCode14
    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ''
          config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
    end

  end
end
